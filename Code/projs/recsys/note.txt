这个project是协同过滤推荐「collaborative filtering recommender(cfrec)」算法的 pytorch版实现, 包括 matrix factorization/AutoRec/NeuralMF/SeqAwareRecsys
目的是 「基于用户行为的推荐」, 行为即"interaction", based on explicit显性/implicit隐形 interactions. 显性action有打分、点赞、不喜欢等, 隐性action有点击、曝光不点击等

协同过滤collaborative filtering的本质, 是为了构建「user-item interaction matrix」, 即用户-物品交互矩阵.
矩阵的元素可以是显性行为, 比如打分/是否点赞/是否喜欢等;也可以是隐性行为, 比如是否点击/是否浏览等.

对于显性explicit interactions, 一般认为: 数值本身有意义, 并且0代表Null而不是0分
interaction matrix中 0代表「完全未知」元, 即「i,j」元是0, 代表用户i对物品j的显性行为未知, 用户i还没有碰到物品j. 目标是预测这些未知元.
一般用rmse去构造「值」的损失
1. Matrix Factorizationn
本质是用户id特征, embedd为k维的latent vector; 物品id特征, embedd为k维的latent vector; 最后用两个latent vector的内积作为interaction的预测

理解embed:
users_tensor: (batch_size, ) ---embed---> (batch_size, k)
理解方式1: 查表, 即 (num_users, k)的全表, indexing users_tensor里的id值, 得到（batch_size, k)的子表
理解方式2: 线性映射, 即 users_tensor(batch_size,) ---onehot---> (batch_size, num_users) ---linear transfer W---> (batch_size, k)
其中方式2的线性映射表W, 就是方式1中的全表

2. AutoRec(ItemBased or UserBased)
本质是一个自编码器(完成恒等映射的MLP). 用已知的interaction元素作为label, 更新MLP中的参数.
最后将原已有的interaction矩阵作为输入, 输出同形状矩阵, 其在原interaction矩阵为0的位置的填充, 即是预测
简而言之: 完成已知interaction元素到自身的恒等映射MLP, 那么这个MLP作用在0元素上, 预计得到该位置的score(感觉不是很有道理).

3. NeuralMF




对于隐性implicit interactions, 一般认为: 数值本身无意义, 但数值之间的序有意义, 并且0代表0而不是Null
interaction matrix中 0代表「不足以做出行为」元, 即「i,j」元是0, 代表用户i对物品j没有做出行为.
用相对距离去构造「序」的损失